{"ast":null,"code":"var _jsxFileName = \"B:\\\\FetchData\\\\my-api\\\\src\\\\Cards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cards = () => {\n  _s();\n\n  const [get, setGet] = useState([]);\n\n  const fetchApiData = () => {\n    fetch(\"https://api.seatgeek.com/2/events?client_id=MjQ1OTk2ODB8MTYzNzczNDkzNy45MDAwMjE&page=1&per_page=10\").then(res => {\n      return res.json();\n    }).then(info => {\n      let client = info.events;\n      setGet(client);\n    });\n  };\n\n  useEffect(() => {\n    fetchApiData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Cont\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: get.map(info => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            width: \"18rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Type - \", info.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" ID - \", info.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"DATE - \", info.datetime_utc]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-title\",\n              children: [\" Title - \", info.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"card-subtitle mb-2 text-muted\",\n              children: [\"popularity --\", info.popularity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-primary\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: info.url,\n                className: \"card-link\",\n                children: \"More info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cards, \"al4fh/Wo027lSd9bCT3P3CtW0C8=\");\n\n_c = Cards;\nexport default Cards;\n/*For every event, you just have to store (& show) the following information in indexed DB:\r\ntype, id, datetime_utc, title, popularity, url.*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","Cards","get","setGet","fetchApiData","fetch","then","res","json","info","client","events","map","width","type","id","datetime_utc","title","popularity","url"],"sources":["B:/FetchData/my-api/src/Cards.js"],"sourcesContent":["import React, {useState,useEffect} from 'react'\r\nimport './style.css'\r\n\r\nconst Cards = () => {\r\n\r\n       const [get, setGet] = useState([]);\r\n\r\n       const fetchApiData = () => {\r\n         fetch(\"https://api.seatgeek.com/2/events?client_id=MjQ1OTk2ODB8MTYzNzczNDkzNy45MDAwMjE&page=1&per_page=10\")\r\n         .then((res)=> {\r\n           return res.json();\r\n         }).then((info)=>{\r\n           let client = info.events\r\n           setGet(client);\r\n         })\r\n       }\r\n       \r\n       \r\n       \r\n       useEffect ( () => {\r\n       fetchApiData();\r\n       }, [])\r\n       \r\n\r\n return (\r\n      <>\r\n        <div className=\"Cont\">\r\n        <div className='row'>\r\n              {get.map(info => (\r\n                <div className=\"card\" style={{width: \"18rem\"}} key={info.id}>\r\n                <div className=\"card-body\" >\r\n\r\n                  <h5>Type - {info.type}</h5>\r\n                  <p> ID - {info.id}</p>\r\n                  <p className=\"card-text\">DATE - {info.datetime_utc}</p>\r\n\r\n                  <p className=\"card-title\"> Title - {info.title}</p>\r\n                  <h6 className=\"card-subtitle mb-2 text-muted\">popularity --{info.popularity}</h6>\r\n                 <button className='btn btn-outline-primary' ><a href={info.url} className=\"card-link\">More info</a></button>\r\n                </div>\r\n              </div>\r\n              ))}\r\n          </div> \r\n        </div>\r\n\r\n      \r\n      </>\r\n\r\n  )\r\n}\r\n\r\nexport default Cards\r\n\r\n\r\n/*For every event, you just have to store (& show) the following information in indexed DB:\r\ntype, id, datetime_utc, title, popularity, url.*/"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,aAAP;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAEb,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,EAAD,CAA9B;;EAEA,MAAMK,YAAY,GAAG,MAAM;IACzBC,KAAK,CAAC,oGAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAAQ;MACZ,OAAOA,GAAG,CAACC,IAAJ,EAAP;IACD,CAHD,EAGGF,IAHH,CAGSG,IAAD,IAAQ;MACd,IAAIC,MAAM,GAAGD,IAAI,CAACE,MAAlB;MACAR,MAAM,CAACO,MAAD,CAAN;IACD,CAND;EAOD,CARD;;EAYAV,SAAS,CAAG,MAAM;IAClBI,YAAY;EACX,CAFQ,EAEN,EAFM,CAAT;EAKN,oBACK;IAAA,uBACE;MAAK,SAAS,EAAC,MAAf;MAAA,uBACA;QAAK,SAAS,EAAC,KAAf;QAAA,UACOF,GAAG,CAACU,GAAJ,CAAQH,IAAI,iBACX;UAAK,SAAS,EAAC,MAAf;UAAsB,KAAK,EAAE;YAACI,KAAK,EAAE;UAAR,CAA7B;UAAA,uBACA;YAAK,SAAS,EAAC,WAAf;YAAA,wBAEE;cAAA,sBAAYJ,IAAI,CAACK,IAAjB;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAA,qBAAUL,IAAI,CAACM,EAAf;YAAA;cAAA;cAAA;cAAA;YAAA,QAHF,eAIE;cAAG,SAAS,EAAC,WAAb;cAAA,sBAAiCN,IAAI,CAACO,YAAtC;YAAA;cAAA;cAAA;cAAA;YAAA,QAJF,eAME;cAAG,SAAS,EAAC,YAAb;cAAA,wBAAoCP,IAAI,CAACQ,KAAzC;YAAA;cAAA;cAAA;cAAA;YAAA,QANF,eAOE;cAAI,SAAS,EAAC,+BAAd;cAAA,4BAA4DR,IAAI,CAACS,UAAjE;YAAA;cAAA;cAAA;cAAA;YAAA,QAPF,eAQC;cAAQ,SAAS,EAAC,yBAAlB;cAAA,uBAA6C;gBAAG,IAAI,EAAET,IAAI,CAACU,GAAd;gBAAmB,SAAS,EAAC,WAA7B;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAA7C;cAAA;cAAA;cAAA;YAAA,QARD;UAAA;YAAA;YAAA;YAAA;UAAA;QADA,GAAoDV,IAAI,CAACM,EAAzD;UAAA;UAAA;UAAA;QAAA,QADD;MADP;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA;EADF,iBADL;AAyBA,CA9CD;;GAAMd,K;;KAAAA,K;AAgDN,eAAeA,KAAf;AAGA;AACA"},"metadata":{},"sourceType":"module"}